<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mul.camp.a.dao.BbsDao">
	
	<!-- 게시판 불러오기 -->
	<select id="getBbsList" resultType="mul.camp.a.dto.BbsDto">
		SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
		FROM BBS
		ORDER BY REF DESC, STEP ASC
	</select>
	
	<!-- 글 작성 -->
	<insert id="addWrite" parameterType="mul.camp.a.dto.BbsDto">
		INSERT INTO BBS(SEQ, ID, 
						REF, STEP, DEPTH, 
						TITLE, CONTENT, WDATE, DEL, READCOUNT)
		VALUES(NEXTVAL('SEQ_BBS'), #{id},
			   (SELECT * FROM(SELECT IFNULL(MAX(REF)+1, 0)FROM BBS)AS TEMP), 0, 0,
			   #{title}, #{content}, SYSDATE(), 0, 0)
			   <!-- (SELECT * FROM(SELECT IFNULL(MAX(REF)+1, 0)FROM BBS)AS TEMP)
			   ->BBS 게시판에 있는 REF의 최대값이 null이 아니면 1을 더해서 출력, null이면 0으로 출력. -> insert니까 max값에서 1을 더한게 입력이 됨. -->
	</insert>
	
	<!-- 게시글 디테일 불러오기 -->
	<select id="bbsDetail" parameterType="mul.camp.a.dto.BbsDto" resultType="mul.camp.a.dto.BbsDto">
		SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
		FROM BBS
		WHERE SEQ = #{seq}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="readcount" parameterType="mul.camp.a.dto.BbsDto">
		UPDATE BBS
		SET READCOUNT=READCOUNT+1
		WHERE SEQ=#{seq}
	</update>
	
	<!-- 게시물 검색(모바일) -->
	<select id="getBbsListSearch" parameterType="mul.camp.a.dto.BbsParam" resultType="mul.camp.a.dto.BbsDto">>
		SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC) AS RNUM, 	<!-- 번호를 매길 때 REF는 역순으로 STEP은 정순으로 --> 
				SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
			FROM BBS
			WHERE 1=1
			<if test="choice != null and choice != '' and search != null and search != ''">	<!-- 옵션 선택 값과 검색한 내용 값이 null 이 아니고 공백이 아닐때 -->
				<if test="choice == 'title'">												<!-- choice(옵션으로 제출된 값 'title')가 문자열 title이면  -->
					AND TITLE LIKE CONCAT('%', #{search}, '%')								<!-- search내용을 포함한 사이의 값들을 -->
				</if>
				<if test="choice == 'content'">												<!-- choice(옵션으로 제출된 값 'content')가 문자열 content이면  -->
					AND CONTENT LIKE CONCAT('%', #{search}, '%')
					<!-- AND CONTENT LIKE '%'||#{search}||'%' 오라클문법 -->
				</if>
				<if test="choice == 'writer'">												<!-- choice(옵션으로 제출된 값 'writer')가 문자열 writer이면  -->
					AND ID = #{search}
				</if>				
			</if> 
			<!-- 1=1 이랑 AND 를 붙인 이유는 '선택' 을 클릭하고 했을경우 1=1이 없으면 신텍스 에러가 난다. 그걸 방지하기위해 if문 안에 조건이 다 성립되지 않아도 1=1을 통해서 성립되기 때문에 에러가 생기지 않는다. -->
			ORDER BY REF DESC, STEP ASC
	</select>
	
	<!-- 게시물 검색 -->
	<select id="getBbsListSearchPage" parameterType="mul.camp.a.dto.BbsParam" resultType="mul.camp.a.dto.BbsDto">
		SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
		FROM
			(SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC) AS RNUM, 	<!-- WHERE에 조건에 통과한 행에 새로운 번호를 조건에 맞춰서 RNUM이름의 컬럼을 추가로 붙인다. 번호를 매길 때 REF는 역순으로 STEP은 정순으로.--> 
				SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
			FROM BBS
			WHERE 1=1
			<if test="choice != null and choice != '' and search != null and search != ''">	<!-- 옵션 선택 값과 검색한 내용 값이 null 이 아니고 공백이 아닐때 -->
				<if test="choice == 'title'">												<!-- choice(옵션으로 제출된 값 'title')가 문자열 title이면  -->
					AND TITLE LIKE CONCAT('%', #{search}, '%')								<!-- search내용을 포함한 사이의 값들을 -->
				</if>
				<if test="choice == 'content'">												<!-- choice(옵션으로 제출된 값 'content')가 문자열 content이면  -->
					AND CONTENT LIKE CONCAT('%', #{search}, '%')
					<!-- AND CONTENT LIKE '%'||#{search}||'%' 오라클문법 -->
				</if>
				<if test="choice == 'writer'">												<!-- choice(옵션으로 제출된 값 'writer')가 문자열 writer이면  -->
					AND ID = #{search}
				</if>				
			</if> 
			<!-- 1=1 이랑 AND 를 붙인 이유는 '선택' 을 클릭하고 했을경우 1=1이 없으면 신텍스 에러가 난다. 그걸 방지하기위해 if문 안에 조건이 다 성립되지 않아도 1=1을 통해서 성립되기 때문에 에러가 생기지 않는다. -->
			ORDER BY REF DESC, STEP ASC) sub
		WHERE RNUM BETWEEN ${start} AND ${end}
	</select>
	
	<!-- 게시글의 총수 -->
	<select id="getBbsCount" parameterType="mul.camp.a.dto.BbsParam" resultType="java.lang.Integer">
		SELECT IFNULL(COUNT(*), 0) AS CNT
		FROM BBS
		WHERE 1=1
			<if test="choice != null and choice != '' and search != null and search != ''">	<!-- 옵션 선택 값과 검색한 내용 값이 null 이 아니고 공백이 아닐때 -->
				<if test="choice == 'title'">												<!-- choice(옵션으로 제출된 값 'title')가 문자열 title이면  -->
					AND TITLE LIKE CONCAT('%', #{search}, '%')								<!-- search내용을 포함한 사이의 값들을 -->
				</if>
				<if test="choice == 'content'">												<!-- choice(옵션으로 제출된 값 'content')가 문자열 content이면  -->
					AND CONTENT LIKE CONCAT('%', #{search}, '%')
					<!-- AND CONTENT LIKE '%'||#{search}||'%' 오라클문법 -->
				</if>
				<if test="choice == 'writer'">												<!-- choice(옵션으로 제출된 값 'writer')가 문자열 writer이면  -->
					AND ID = #{search}
				</if>				
			</if> 
	</select>
	
	<!-- 답글 -->
	<update id="replyBbsUpdate" parameterType="mul.camp.a.dto.BbsDto">
	UPDATE BBS
	SET STEP = STEP+1
	WHERE REF=(SELECT * FROM(SELECT REF FROM BBS WHERE SEQ=#{seq}) AS TEMP)
		AND STEP > (SELECT * FROM(SELECT STEP FROM BBS WHERE SEQ=#{seq}) AS TEMP)
	<!--UPDATE 부분은 원래 있던 글들을 자리배치하기 위한 설정이다.
		외부에서 들어온 시퀀스 값이랑 BBS 테이블의 시퀀스 값이 같은 행의 REF값과 같은 REF값의 STEP 그리고 
		외부에서 들어온 시퀀스 값이랑 BBS 테이블의 시퀀스 값이 같은 행의 STEP값보다 큰 STEP 의 STEP을 모두 1씩 증가시켜라.
		이걸 하는 이유는 원래 썼던 글들이 최신글보다 아래에 있어야 하기 때문이다. STEP은 수치가 높아질수록 아래에 배치되어있도록 설정을 해놓았다.
		REF는 게시물의 그룹 번호(?)라고 생각하면 된다. 그래서 답글이 달릴 경우 부모글 기준으로 아래에 있는 게시글들은 싹다 아래로 가야하기 때문에 WHERE 첫째를 설정해준 것.
		STEP은 게시글 제목을 
	-->		
	</update>
	
	<insert id="replyBbsInsert" parameterType="mul.camp.a.dto.BbsDto">
	INSERT INTO BBS(SEQ, ID, 
					REF, 
					STEP, 
					DEPTH, 
					TITLE, CONTENT, WDATE, DEL, READCOUNT)
	VALUES(NEXTVAL('SEQ_BBS'), #{id}, 
			(SELECT * FROM(SELECT REF FROM BBS WHERE SEQ=#{seq}) AS TEMP), 	<!-- REF 게시물 고유 위치번호 --> 
			(SELECT * FROM(SELECT STEP FROM BBS WHERE SEQ=#{seq})AS TEMP) +1 , <!-- STEP 게시물 세로 번호 -->
			(SELECT * FROM(SELECT DEPTH FROM BBS WHERE SEQ=#{seq})AS TEMP) +1 ,<!-- DEPTH 게시물 가로 번호-->
			#{title}, #{content}, SYSDATE(), 0, 0)
	<!--INSERT는 작성한 답글을 자리배치하기 위한 설정이다.
		REF는 그룹 값이기 때문에 수치를 변경해줄 필요가 없다.
		STEP은 원래 답글 달려던 값보다 하나 아래 있기 때문에 +1 해주면 된다.
		DEPTH는 원래 답글 달려던 값보다 하나 옆에 있어야 하기 때문에 +1 해주면된다. 
	-->
	</insert>
	
	<!-- 수정 -->
	<update id="bbsUpdate" parameterType="mul.camp.a.dto.BbsDto">
		UPDATE BBS
		SET TITLE=#{title}, CONTENT=#{content}
		WHERE SEQ=#{seq}
	</update>
	
	<!-- 삭제 -->
	<update id="bbsDelect" parameterType="mul.camp.a.dto.BbsDto">
		UPDATE BBS
		SET DEL=1
		WHERE SEQ=#{seq}
	</update>
	
	<!-- 댓글 입력 -->
	<insert id="addComment" parameterType="mul.camp.a.dto.CommentDto">
		INSERT INTO COMMENT(SEQ, ID, WDATE, CONTENT)
		VALUES(#{seq}, #{id}, SYSDATE(), #{content})
	</insert>
	
	<!-- 댓글 불러오기 -->
	<select id="getCommentList" parameterType="java.lang.Integer" resultType="mul.camp.a.dto.CommentDto">
		SELECT SEQ, ID, WDATE, CONTENT
		FROM COMMENT
		WHERE SEQ=#{seq}
	</select>
	
</mapper>